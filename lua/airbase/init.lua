local palette = require("airbase.palette")
if vim.g.colors_name then
  vim.cmd.hi("clear")
else
end
vim.g["colors_name"] = "airbase"
vim.o["termguicolors"] = true
vim.api.nvim_set_hl(0, "ColorColumn", {bg = palette["bg-dim"]})
vim.api.nvim_set_hl(0, "Conceal", {})
vim.api.nvim_set_hl(0, "CurSearch", {link = "IncSearch"})
vim.api.nvim_set_hl(0, "Cursor", {bg = palette.cursor})
vim.api.nvim_set_hl(0, "CursorColumn", {})
vim.api.nvim_set_hl(0, "CursorIM", {})
vim.api.nvim_set_hl(0, "CursorLine", {bg = palette["bg-hl-line"]})
vim.api.nvim_set_hl(0, "CursorLineFold", {})
vim.api.nvim_set_hl(0, "CursorLineNr", {bg = palette["bg-line-number-active"], fg = palette["fg-line-number-active"], bold = true})
vim.api.nvim_set_hl(0, "CursorLineSign", {bg = palette["bg-dim"]})
vim.api.nvim_set_hl(0, "DiffAdd", {bg = palette["bg-added"], fg = palette["fg-added"]})
vim.api.nvim_set_hl(0, "DiffChange", {bg = palette["bg-changed"], fg = palette["fg-changed"]})
vim.api.nvim_set_hl(0, "DiffDelete", {bg = palette["bg-removed"], fg = palette["fg-removed"]})
vim.api.nvim_set_hl(0, "DiffText", {})
vim.api.nvim_set_hl(0, "Directory", {fg = palette["accent-0"]})
vim.api.nvim_set_hl(0, "EndOfBuffer", {})
vim.api.nvim_set_hl(0, "ErrorMsg", {})
vim.api.nvim_set_hl(0, "FloatBorder", {fg = palette.border})
vim.api.nvim_set_hl(0, "FloatFooter", {})
vim.api.nvim_set_hl(0, "FloatTitle", {})
vim.api.nvim_set_hl(0, "FoldColumn", {})
vim.api.nvim_set_hl(0, "Folded", {})
vim.api.nvim_set_hl(0, "IncSearch", {bg = palette["bg-search-current"], fg = palette["fg-main"]})
vim.api.nvim_set_hl(0, "LineNr", {bg = palette["bg-line-number-inactive"], fg = palette["fg-line-number-inactive"]})
vim.api.nvim_set_hl(0, "LineNrAbove", {bg = palette["bg-line-number-inactive"], fg = palette["fg-line-number-inactive"]})
vim.api.nvim_set_hl(0, "LineNrBelow", {bg = palette["bg-line-number-inactive"], fg = palette["fg-line-number-inactive"]})
vim.api.nvim_set_hl(0, "MatchParen", {bg = palette["bg-paren-match"], fg = palette["fg-paren-match"]})
vim.api.nvim_set_hl(0, "ModeMsg", {})
vim.api.nvim_set_hl(0, "MoreMsg", {})
vim.api.nvim_set_hl(0, "MsgArea", {})
vim.api.nvim_set_hl(0, "MsgSeparator", {})
vim.api.nvim_set_hl(0, "NonText", {})
vim.api.nvim_set_hl(0, "Normal", {bg = palette["bg-main"], fg = palette["fg-main"]})
vim.api.nvim_set_hl(0, "NormalFloat", {bg = palette["bg-dim"]})
vim.api.nvim_set_hl(0, "NormalNC", {})
vim.api.nvim_set_hl(0, "Pmenu", {bg = palette["bg-dim"]})
vim.api.nvim_set_hl(0, "PmenuExtra", {fg = "#000000"})
vim.api.nvim_set_hl(0, "PmenuExtraSel", {})
vim.api.nvim_set_hl(0, "PmenuKind", {})
vim.api.nvim_set_hl(0, "PmenuKindSel", {})
vim.api.nvim_set_hl(0, "PmenuSbar", {bg = palette["bg-inactive"]})
vim.api.nvim_set_hl(0, "PmenuSel", {bg = palette["bg-completion"], bold = true})
vim.api.nvim_set_hl(0, "PmenuThumb", {bg = palette["fg-dim"]})
vim.api.nvim_set_hl(0, "Question", {})
vim.api.nvim_set_hl(0, "QuickFixLine", {})
vim.api.nvim_set_hl(0, "Search", {bg = palette["bg-search-lazy"], fg = palette["fg-main"]})
vim.api.nvim_set_hl(0, "SignColumn", {bg = palette["bg-dim"]})
vim.api.nvim_set_hl(0, "SnippetTabstop", {})
vim.api.nvim_set_hl(0, "SpecialKey", {})
vim.api.nvim_set_hl(0, "SpellBad", {})
vim.api.nvim_set_hl(0, "SpellCap", {})
vim.api.nvim_set_hl(0, "SpellLocal", {})
vim.api.nvim_set_hl(0, "SpellRare", {})
vim.api.nvim_set_hl(0, "StatusLine", {bg = palette["bg-mode-line-active"], fg = palette["fg-mode-line-active"]})
vim.api.nvim_set_hl(0, "StatusLineNC", {bg = palette["bg-mode-line-inactive"], fg = palette["fg-mode-line-inactive"]})
vim.api.nvim_set_hl(0, "Substitute", {})
vim.api.nvim_set_hl(0, "TabLine", {bg = palette["bg-tab-other"]})
vim.api.nvim_set_hl(0, "TabLineFill", {bg = palette["bg-tab-bar"]})
vim.api.nvim_set_hl(0, "TabLineSel", {bg = palette["bg-tab-current"]})
vim.api.nvim_set_hl(0, "TermCursor", {})
vim.api.nvim_set_hl(0, "TermCursorNC", {})
vim.api.nvim_set_hl(0, "Title", {})
vim.api.nvim_set_hl(0, "Visual", {bg = palette["bg-region"], fg = palette["fg-region"]})
vim.api.nvim_set_hl(0, "VisualNOS", {})
vim.api.nvim_set_hl(0, "WarningMsg", {})
vim.api.nvim_set_hl(0, "Whitespace", {})
vim.api.nvim_set_hl(0, "WildMenu", {})
vim.api.nvim_set_hl(0, "WinBar", {})
vim.api.nvim_set_hl(0, "WinBarNC", {})
vim.api.nvim_set_hl(0, "WinSeparator", {fg = palette.border, bold = true})
vim.api.nvim_set_hl(0, "Boolean", {})
vim.api.nvim_set_hl(0, "Character", {})
vim.api.nvim_set_hl(0, "Comment", {fg = palette.comment})
vim.api.nvim_set_hl(0, "Conditional", {})
vim.api.nvim_set_hl(0, "Constant", {fg = palette.constant})
vim.api.nvim_set_hl(0, "Debug", {})
vim.api.nvim_set_hl(0, "Define", {})
vim.api.nvim_set_hl(0, "Delimiter", {fg = palette.delimiter})
vim.api.nvim_set_hl(0, "Error", {})
vim.api.nvim_set_hl(0, "Exception", {})
vim.api.nvim_set_hl(0, "Float", {})
vim.api.nvim_set_hl(0, "Function", {fg = palette.fnname})
vim.api.nvim_set_hl(0, "Identifier", {fg = palette.variable})
vim.api.nvim_set_hl(0, "Ignore", {})
vim.api.nvim_set_hl(0, "Include", {})
vim.api.nvim_set_hl(0, "Keyword", {fg = palette.keyword, bold = true})
vim.api.nvim_set_hl(0, "Label", {})
vim.api.nvim_set_hl(0, "Macro", {})
vim.api.nvim_set_hl(0, "Number", {fg = palette.number})
vim.api.nvim_set_hl(0, "Operator", {fg = palette.operator})
vim.api.nvim_set_hl(0, "PreCondit", {})
vim.api.nvim_set_hl(0, "PreProc", {fg = palette.preprocessor})
vim.api.nvim_set_hl(0, "Repeat", {})
vim.api.nvim_set_hl(0, "Special", {})
vim.api.nvim_set_hl(0, "SpecialChar", {})
vim.api.nvim_set_hl(0, "SpecialComment", {})
vim.api.nvim_set_hl(0, "Statement", {})
vim.api.nvim_set_hl(0, "StorageClass", {})
vim.api.nvim_set_hl(0, "String", {fg = palette.string})
vim.api.nvim_set_hl(0, "Structure", {})
vim.api.nvim_set_hl(0, "Tag", {})
vim.api.nvim_set_hl(0, "Todo", {})
vim.api.nvim_set_hl(0, "Type", {fg = palette.type, bold = true})
vim.api.nvim_set_hl(0, "Typedef", {})
vim.api.nvim_set_hl(0, "Underlined", {underline = true})
vim.api.nvim_set_hl(0, "Added", {link = "DiffAdd"})
vim.api.nvim_set_hl(0, "Changed", {link = "DiffChange"})
vim.api.nvim_set_hl(0, "Removed", {link = "DiffDelete"})
vim.api.nvim_set_hl(0, "@variable", {fg = palette.variable})
vim.api.nvim_set_hl(0, "@variable.builtin", {})
vim.api.nvim_set_hl(0, "@variable.parameter", {link = "@variable"})
vim.api.nvim_set_hl(0, "@variable.parameter.builtin", {})
vim.api.nvim_set_hl(0, "@variable.member", {})
vim.api.nvim_set_hl(0, "@constant", {link = "Constant"})
vim.api.nvim_set_hl(0, "@constant.builtin", {})
vim.api.nvim_set_hl(0, "@constant.macro", {})
vim.api.nvim_set_hl(0, "@module", {link = "Include"})
vim.api.nvim_set_hl(0, "@module.builtin", {})
vim.api.nvim_set_hl(0, "@label", {})
vim.api.nvim_set_hl(0, "@string", {link = "String"})
vim.api.nvim_set_hl(0, "@string.documentation", {})
vim.api.nvim_set_hl(0, "@string.regexp", {})
vim.api.nvim_set_hl(0, "@string.escape", {})
vim.api.nvim_set_hl(0, "@string.special", {})
vim.api.nvim_set_hl(0, "@string.special.symbol", {})
vim.api.nvim_set_hl(0, "@string.special.path", {})
vim.api.nvim_set_hl(0, "@string.special.url", {})
vim.api.nvim_set_hl(0, "@character", {link = "Character"})
vim.api.nvim_set_hl(0, "@character.special", {link = "SpecialChar"})
vim.api.nvim_set_hl(0, "@boolean", {link = "Boolean"})
vim.api.nvim_set_hl(0, "@number", {link = "Number"})
vim.api.nvim_set_hl(0, "@number.float", {link = "Float"})
vim.api.nvim_set_hl(0, "@type", {link = "Type"})
vim.api.nvim_set_hl(0, "@type.builtin", {})
vim.api.nvim_set_hl(0, "@type.definition", {link = "TypeDef"})
vim.api.nvim_set_hl(0, "@attribute", {link = "PreProc"})
vim.api.nvim_set_hl(0, "@attribute.builtin", {})
vim.api.nvim_set_hl(0, "@property", {})
vim.api.nvim_set_hl(0, "@function", {link = "Function"})
vim.api.nvim_set_hl(0, "@function.builtin", {link = "Special"})
vim.api.nvim_set_hl(0, "@function.call", {link = "@function"})
vim.api.nvim_set_hl(0, "@function.macro", {link = "Macro"})
vim.api.nvim_set_hl(0, "@function.method", {link = "Function"})
vim.api.nvim_set_hl(0, "@function.method.call", {link = "@function.method"})
vim.api.nvim_set_hl(0, "@constructor", {})
vim.api.nvim_set_hl(0, "@operator", {link = "Operator"})
vim.api.nvim_set_hl(0, "@keyword", {link = "Keyword"})
vim.api.nvim_set_hl(0, "@keyword.coroutine", {})
vim.api.nvim_set_hl(0, "@keyword.function", {})
vim.api.nvim_set_hl(0, "@keyword.operator", {})
vim.api.nvim_set_hl(0, "@keyword.import", {})
vim.api.nvim_set_hl(0, "@keyword.type", {})
vim.api.nvim_set_hl(0, "@keyword.modifier", {})
vim.api.nvim_set_hl(0, "@keyword.repeat", {})
vim.api.nvim_set_hl(0, "@keyword.return", {})
vim.api.nvim_set_hl(0, "@keyword.debug", {})
vim.api.nvim_set_hl(0, "@keyword.exception", {link = "Exception"})
vim.api.nvim_set_hl(0, "@keyword.conditional", {link = "Conditional"})
vim.api.nvim_set_hl(0, "@keyword.conditional.ternary", {})
vim.api.nvim_set_hl(0, "@keyword.directive", {link = "PreProc"})
vim.api.nvim_set_hl(0, "@keyword.directive.define", {link = "Define"})
vim.api.nvim_set_hl(0, "@punctuation.delimiter", {link = "Delimiter"})
vim.api.nvim_set_hl(0, "@punctuation.bracket", {fg = palette.bracket})
vim.api.nvim_set_hl(0, "@punctuation.special", {})
vim.api.nvim_set_hl(0, "@comment", {link = "Comment"})
vim.api.nvim_set_hl(0, "@comment.documentation", {})
vim.api.nvim_set_hl(0, "@comment.error", {})
vim.api.nvim_set_hl(0, "@comment.warning", {})
vim.api.nvim_set_hl(0, "@comment.todo", {})
vim.api.nvim_set_hl(0, "@comment.note", {})
vim.api.nvim_set_hl(0, "@markup.strong", {bold = true})
vim.api.nvim_set_hl(0, "@markup.italic", {italic = true})
vim.api.nvim_set_hl(0, "@markup.strikethrough", {strikethrough = true})
vim.api.nvim_set_hl(0, "@markup.underline", {underline = true})
vim.api.nvim_set_hl(0, "@markup.heading", {})
vim.api.nvim_set_hl(0, "@markup.heading.1", {})
vim.api.nvim_set_hl(0, "@markup.heading.2", {})
vim.api.nvim_set_hl(0, "@markup.heading.3", {})
vim.api.nvim_set_hl(0, "@markup.heading.4", {})
vim.api.nvim_set_hl(0, "@markup.heading.5", {})
vim.api.nvim_set_hl(0, "@markup.heading.6", {})
vim.api.nvim_set_hl(0, "@markup.quote", {})
vim.api.nvim_set_hl(0, "@markup.math", {link = "Special"})
vim.api.nvim_set_hl(0, "@markup.link", {})
vim.api.nvim_set_hl(0, "@markup.link.label", {})
vim.api.nvim_set_hl(0, "@markup.link.url", {})
vim.api.nvim_set_hl(0, "@markup.raw", {link = "String"})
vim.api.nvim_set_hl(0, "@markup.raw.block", {})
vim.api.nvim_set_hl(0, "@markup.list", {})
vim.api.nvim_set_hl(0, "@markup.list.checked", {})
vim.api.nvim_set_hl(0, "@markup.list.unchecked", {})
vim.api.nvim_set_hl(0, "@diff.plus", {link = "DiffAdd"})
vim.api.nvim_set_hl(0, "@diff.minus", {link = "DiffDelete"})
vim.api.nvim_set_hl(0, "@diff.delta", {link = "DiffChange"})
vim.api.nvim_set_hl(0, "@tag", {link = "Label"})
vim.api.nvim_set_hl(0, "@tag.builtin", {})
vim.api.nvim_set_hl(0, "@tag.attribute", {})
vim.api.nvim_set_hl(0, "@tag.delimiter", {link = "Delimiter"})
vim.api.nvim_set_hl(0, "DiagnosticError", {fg = palette.err})
vim.api.nvim_set_hl(0, "DiagnosticWarn", {fg = palette.warning})
vim.api.nvim_set_hl(0, "DiagnosticInfo", {fg = palette.info})
vim.api.nvim_set_hl(0, "DiagnosticHint", {})
vim.api.nvim_set_hl(0, "DiagnosticOk", {})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineError", {sp = palette["underline-err"], undercurl = true})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineWarn", {sp = palette["underline-warning"], undercurl = true})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineInfo", {sp = palette["underline-note"], undercurl = true})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineHint", {})
vim.api.nvim_set_hl(0, "DiagnosticUnderlineOk", {})
vim.api.nvim_set_hl(0, "DiagnosticSignError", {})
vim.api.nvim_set_hl(0, "DiagnosticSignWarn", {})
vim.api.nvim_set_hl(0, "DiagnosticSignInfo", {})
vim.api.nvim_set_hl(0, "DiagnosticSignHint", {})
vim.api.nvim_set_hl(0, "DiagnosticSignOk", {})
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextError", {link = "DiagnosticError"})
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextWarn", {link = "DiagnosticWarn"})
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextInfo", {link = "DiagnosticInfo"})
vim.api.nvim_set_hl(0, "DiagnosticVirtualTextHint", {link = "DiagnosticHint"})
vim.api.nvim_set_hl(0, "CmpItemAbbr", {fg = palette["fg-main"]})
vim.api.nvim_set_hl(0, "CmpItemAbbrDeprecated", {fg = palette["fg-main"], strikethrough = true})
vim.api.nvim_set_hl(0, "CmpItemAbbrMatch", {fg = palette["fg-completion-match-0"], bold = true})
vim.api.nvim_set_hl(0, "CmpItemAbbrMatchFuzzy", {fg = palette["fg-completion-match-0"], bold = true})
vim.api.nvim_set_hl(0, "CmpItemKindFunction", {link = "Function"})
vim.api.nvim_set_hl(0, "CmpItemKindConstant", {link = "Constant"})
vim.api.nvim_set_hl(0, "CmpItemMenu", {bg = palette["bg-dim"], fg = palette["fg-main"]})
return {airbase = airbase}
